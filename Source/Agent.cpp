#include "Agent.h"#include "Random.h"#include "MathStuff.h"#include "smallStructs.h"using namespace std;//======================================================================//Constsconst GLfloat Agent::skMaxOtherAgentDetectDistSquared = 10.0 * 10.0;const GLfloat Agent::skMaxCowFrustration = .95;const GLfloat Agent::skMaxAvoidanceFrustration = .9;const GLfloat Agent::skMaxNeighborsCogFrustration = .85;const GLfloat Agent::skMaxNeighborsVelFrustration = .8;const float Agent::skMaterialSpecular[]  = {0.0f, 0.0f, 0.0f, 1.0f};//{0.5f, 0.5f, 0.5f, 1.0f};const float Agent::skMaterialShininess = 0.0f;//128.0f;//======================================================================//Extern Global variablesextern Settings gSettings;//======================================================================//Global variablesGLfloat Agent::sAvoidanceDistSquared = 1.0 * 1.0;GLfloat Agent::sWorldCenterStrength = 10.0;GLfloat Agent::sNeighborCogStrength = 10.0;GLfloat Agent::sNeighborVelocityStrength = 50.0;GLfloat Agent::sAvoidanceStrength = 100.0;//======================================================================Agent::Agent(){	_loc[0] = RandNegFloat(gSettings.worldBounds * .75) + gSettings.worldCenter[0];	_loc[1] = RandNegFloat(gSettings.worldBounds * .75) + gSettings.worldCenter[1];	_loc[2] = RandNegFloat(gSettings.worldBounds * .75) + gSettings.worldCenter[2];		_desiredVel[0] = RandNegFloat(100.0);	_desiredVel[1] = RandNegFloat(100.0);	_desiredVel[2] = RandNegFloat(100.0);		_actualVel[0] = _actualVel[1] = _actualVel[2] = 0.0;		_stateColor[0] = _stateColor[1] = _stateColor[2] = 0.0;	_stateColor[3] = 1.0;	_color[0] = _color[1] = _color[2] = 0.0;	_color[3] = 1.0;		_tailPos = RandNegFloat(1.0);	_tailMovingForward = (RandZeroInt(2) == 1) ? true : false;		_cowFrustration = _neighborsCogFrustration = _neighborsVelFrustration = _avoidanceFrustration = 0.0;	_dominantFrustrationType = Agent::DRIVE_COW;	_dominantFrustration = 0.0;}Agent::~Agent(){}